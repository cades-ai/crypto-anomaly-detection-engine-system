# Crypto Anomaly Detection Engine (CADE)
#
# Continuous Integration Workflow
#
# This workflow implements automated testing, linting, and security scanning
# for all pull requests and pushes to main branches.
#
# Author: CADE
# Team License: Proprietary

name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run linting
      run: |
        pip install flake8 black isort
        flake8 . --count --show-source --statistics
        black . --check
        isort . --check-only

    - name: Run tests with coverage
      run: |
        pip install pytest pytest-cov
        pytest tests/ --cov=src/ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Security scan
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Run Bandit security scanner
      run: |
        pip install bandit
        bandit -r src/ -ll -ii -x tests/

  type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install mypy
      run: |
        pip install mypy types-requests types-PyYAML
        
    - name: Run type checking
      run: |
        mypy src/ --ignore-missing-imports

  build:
    needs: [test, security, type-check]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/Dockerfile
        push: false
        tags: cade:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run --rm cade:test python -m pytest tests/

    - name: Clean up
      if: always()
      run: docker system prune -f